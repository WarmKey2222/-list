给定一个 n × n 的二维矩阵表示一个图像。
将图像顺时针旋转 90 度。
说明：
你必须在原地旋转图像，这意味着你需要直接修改输入的二维矩阵。请不要使用另一个矩阵来旋转图像。
示例 1:
给定 matrix = 
[
  [1,2,3],
  [4,5,6],
  [7,8,9]
],
原地旋转输入矩阵，使其变为:
[
  [7,4,1],
  [8,5,2],
  [9,6,3]
]
'''
#include<iostream>
#include<vector>
using namespace std;
class Solution {
public:
	void rotate(vector<vector<int>>& matrix) {
		int n = matrix.size();
		for (int i = 0; i < n; i++)    //转置
			for (int j = i; j < n; j++)
			{
				int temp = matrix[i][j];
				matrix[i][j] = matrix[j][i];
				matrix[j][i] = temp;
			}
		for (int i = 0; i < n; i++)            //变换坐标
			for (int j = 0; j < n/2 ; j++) //如果j<n时，相当于变换两次，例如（0，0）->(0,2);(0,1)->(0,1);(0,2)->(0,0)
		{                                      //所以j<n/2
				int temp = matrix[i][j];
				matrix[i][j] = matrix[i][n-j-1];
				matrix[i][n - j - 1] = temp;

		}
		
		}
};
int main()
{
	
	vector<vector<int>> vec = { {1,2,3,4},{5,6,7,8},{9,10,11,12},{13,14,15,16} };
	Solution sol;
	sol.rotate(vec);
	system("pause");
	return 0;
}

'''
